spring.application.name=api-gateway
spring.config.import=${SPRING_CONFIG_IMPORT:optional:configserver:http://localhost:8888}
eureka.client.service-url.defaultZone=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka/}

logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.reactor.netty.http.client=DEBUG
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping=true
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=https://whodev.top,http://152.42.172.83:3000,http://localhost:5173
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,PUT,DELETE,PATCH,OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].exposed-headers=Authorization,Content-Type
spring.cloud.gateway.globalcors.cors-configurations.[/**].allow-credentials=true
spring.cloud.gateway.globalcors.cors-configurations.[/**].max-age=3600

#Sprig cloud gateway route for security-service
spring.cloud.gateway.routes[0].id=security-service
spring.cloud.gateway.routes[0].uri=lb://security-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/users/**


#Sprig cloud gateway route for patient-service (patients)
spring.cloud.gateway.routes[1].id=patient-service
spring.cloud.gateway.routes[1].uri=lb://patient-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/patients/**


#Sprig cloud gateway route for doctor-service (doctors)
spring.cloud.gateway.routes[2].id=doctor-service
spring.cloud.gateway.routes[2].uri=lb://doctor-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/doctors/**

#Sprig cloud gateway route for patient-service (health-records)
spring.cloud.gateway.routes[3].id=patient-service
spring.cloud.gateway.routes[3].uri=lb://patient-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/health-records/**

#Spring cloud gateway route for community-portal-service (posts)
spring.cloud.gateway.routes[4].id=community-portal-service
spring.cloud.gateway.routes[4].uri=lb://community-portal-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/community-portal/**

#Sprig cloud gateway route for doctor-service (appointments)
spring.cloud.gateway.routes[5].id=doctor-service
spring.cloud.gateway.routes[5].uri=lb://doctor-service
spring.cloud.gateway.routes[5].predicates[0]=Path=/appointments/**

#Sprig cloud gateway route for cdss-service
spring.cloud.gateway.routes[6].id=cdss-service
spring.cloud.gateway.routes[6].uri=lb://cdss-service
spring.cloud.gateway.routes[6].predicates[0]=Path=/cdss/**

#Sprig cloud gateway route for notification-service
spring.cloud.gateway.routes[7].id=notification-service
spring.cloud.gateway.routes[7].uri=lb://notification-service
spring.cloud.gateway.routes[7].predicates[0]=Path=/notifications/**

#Spring cloud gateway route for pharmaceutical-inventory-service
spring.cloud.gateway.routes[8].id=pharmaceutical-inventory-service
spring.cloud.gateway.routes[8].uri=lb://pharmaceutical-inventory-service
spring.cloud.gateway.routes[8].predicates[0]=Path=/pharmaceutical-inventory/**

#Spring cloud gateway route for doctor-service (rooms-allocation)
spring.cloud.gateway.routes[9].id=doctor-service
spring.cloud.gateway.routes[9].uri=lb://doctor-service
spring.cloud.gateway.routes[9].predicates[0]=Path=/rooms/**

#Spring Cloud Gateway route for analytics-research-service
spring.cloud.gateway.routes[10].id=analytic-research-service
spring.cloud.gateway.routes[10].uri=lb://analytic-research-service
spring.cloud.gateway.routes[10].predicates[0]=Path=/research/**

#Spring Cloud Gateway route for analytics-research-service
spring.cloud.gateway.routes[11].id=cdss-service
spring.cloud.gateway.routes[11].uri=lb://cdss-service
spring.cloud.gateway.routes[11].predicates[0]=Path=/recommendation/**

# for zipkin
logging.pattern.level="%5p [${spring.application.name:},traceId=%X{traceId:-},spanId=%X{spanId:-}]"
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=${MANAGEMENT_ZIPKIN_TRACING_ENDPOINT:http://localhost:9411/api/v2/spans}
management.tracing.propagation.type=b3

spring.cloud.openfeign.okhttp.enabled=true